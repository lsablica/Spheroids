name: Build Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest] #, windows-latest]
        python-version: ["3.11"]

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel cibuildwheel pybind11

      # OS-specific setup for Linux
      - name: Install Armadillo on Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libarmadillo-dev

      # OS-specific setup for macOS
      - name: Install Armadillo on macOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew update
          brew install armadillo llvm libomp
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.15  # Set deployment target for macOS

      # OS-specific setup for Windows
      - name: Install Armadillo on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          choco install armadillo 
      
      - name: Debug LLVM Path
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew --prefix llvm
          ls $(brew --prefix llvm)/bin

          
      # Build wheels on macOS
      - name: Build wheels on macOS
        if: ${{ matrix.os == 'macos-latest' }}
        env:
          PATH: $(brew --prefix llvm)/bin:$PATH   # Ensure LLVM's clang is in PATH
          CC: clang                             # Use clang as the C compiler
          CXX: clang++                          # Use clang++ as the C++ compiler
          LDFLAGS: -L$(brew --prefix llvm)/lib    # Link against LLVM's lib
          CPPFLAGS: -I$(brew --prefix llvm)/include  # Include LLVM headers
          MACOSX_DEPLOYMENT_TARGET: 10.15
        run: python setup.py bdist_wheel
        
        
      # Build wheels
      - name: Build wheels
        if: ${{ matrix.os != 'macos-latest' }}
        run: |
          python setup.py bdist_wheel

      # Test built wheels
      - name: Test built wheels
        run: |
          python -m pip install dist/*.whl
          python -c "import spheroids; print('Package imported successfully!')"

      # Upload built wheels
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: built-wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/
          
